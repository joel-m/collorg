#PRAGMA 'tasks':['Anonymous navigation']
#PRAGMA 'label':'List posts (by post)'
#PRAGMA 'in_menu':False
# >>>
def remove_link_f(post, elt_oid):
    label = '<img src="/collorg/images/trashcan.svg" class="medicon" />'
    title = _("remove from this list")
    link = html(post).a(cog_method="w3remove", label=label, target='_page_',
                        elt_oid=elt_oid, title=title)
    return link

# >>>
the_post = kwargs['post']
sortable = False
if (cog_user and 'author_' in the_post.__dict__ and
    cog_user.cog_oid_.value == the_post.author_.value):
    sortable = True
data_oid = the_post.cog_oid_.value
self.data_oid_.set_intention(data_oid)
self.cog_fqtn_.set_intention('collorg.web.topic', '!=')
self.order_by(self.post_order_)
post = self.db.table('collorg.communication.blog.post')
self.cog_light = True
# data_oid is used as reference object for sort
if self.exists():
    # +++ article
    # >>>
    for se in self:
        if se.post_visibility_ == 'private':
            if cog_user:
                ch_post = post()
                ch_post.cog_oid_.set_intention(se.cog_oid_)
                ch_post = ch_post.get()
                if not ch_post.check_visibility(cog_user):
                    continue
            else:
                continue
        remove_link = ''
{#
        # ---
        {% data_oid %}<br>{% se.data_oid_ %}<br>{% se.cog_oid_ %}
        # >>>
        if cog_user and the_post and 'author_' in the_post.__dict__:
            # ---
            {% the_post.author_ %} {% cog_user.cog_oid_ %}
        # >>>
#}
        if ('author_' in the_post.__dict__ and (cog_user and (the_post and
            the_post.author_.value == cog_user.cog_oid_.value) or
            cog_user and (data_oid == se.data_oid_ and
             se.author_oid_ == cog_user.cog_oid_.value))):
            remove_link = remove_link_f(the_post, se.cog_oid_)
        label = self.get_link_label(se)
        if not label:
            continue
        important = ""
        if se.important_post_:
            important = "important"
        b_important = important and "b_important" or ""
        hidden_link = html(se).a(label=label, css_class="hidden")
        elt_link = html(se).a(label=label)
        # ---
        <li class="post_item follow clickable {% important %}"
            data-data_oid="{% data_oid %}"
            data-elt_oid="{% se.cog_oid_ %}"
        >
        {% hidden_link %}
        <div class="right">
        {% remove_link %}
        </div>
        # >>>
        if sortable:
            # ---
            <span class="ui-icon ui-icon-arrowthick-2-n-s"></span>
        # ---
        <div>
        # >>>
        attachment = ""
        if se.attachment_ != 0:
            attachment = ('<div class="idx right">{}<img class="medicon" '
                'src="/collorg/images/attachment.svg" /></div>'.format(
                    se.attachment_))
        comment = ""
        if se.comment_ != 0:
            comment = ('<div class="idx right">{}<img class="medicon" '
                'src="/collorg/images/conversation.svg" /></div>'.format(
                    se.comment_))
        # ---
        <div class="right">
        {% comment %} {% attachment %}
        </div>
        <span class="post_title">{% elt_link %}</span>
        # >>>
        visibility = se.post_visibility_
        post.visibility_.set_intention(visibility)
        if visibility != 'public':
            # ---
            {% post._w3visibility() %}
        # ---
        <div>{% se.introductory_paragraph_ %}</div>
        <div class="blog_item_footer"></div>
        </div>
        </li>
    # --- article
    # >>>
    if article:
        article = '<ul class="none {}">{}</ul>'.format(
            sortable and "sortable", article)
    list_ = self.db.table('collorg.core.base_table').w3display_base(
        article = article, footer = '', embedded = True)
    id_ = html.random_id()
    list_id = "list_{}".format(id_)
    # ---
    <div id="{% list_id %}">
    {% list_ %}
    # >>>
    if sortable:
        form_id = "form_{}".format(id_)
        elt_id = "elt_{}".format(id_)
        prev_id = "prev_{}".format(id_)
        next_id = "next_{}".format(id_)
        button_id = "button_{}".format(id_)
        # ---
        <div class="hidden">
        # +++ form
        <form type="POST" id="{% form_id %}">
        <input type="hidden" name="cog_oid_" value="{% the_post.cog_oid_ %}" />
        <input type="hidden" name="cog_method" value="w3sort_attached_posts" />
        <input type="text" name="elt_oid" id="{% elt_id %}" />
        <input type="text" name="prev_oid" id="{% prev_id %}" />
        <input type="text" name="next_oid" id="{% next_id %}" />
        </form>
        <button class="action" id="{% button_id %}"
          data-form-id="{% form_id %}" target="{% list_id %}"></button>
        # --- form
        {% form %}
        </div>
        <script type="text/javascript">
        $(document).ready(function(){
            $('.sortable').sortable({
// buggy with webkit               axis: "y",
                update: function(event, ui){
                    var elt = ui.item.attr('data-elt_oid');
                    var prev = ui.item.prev().attr('data-elt_oid');
                    var next = ui.item.next().attr('data-elt_oid');
                    prev && $("#{% prev_id %}").val(prev);
                    next && $("#{% next_id %}").val(next);
                    $("#{% elt_id %}").val(elt);
                    $("#{% button_id %}").click();
                }
            });
        });
        </script>
    # ---
    </div>

